{"version":3,"sources":["components/Add/Add.module.css","components/Title/Title.module.css","components/Edit/Edit.module.css","components/DelButton/DelButton.module.css","components/Product/Product.module.css","components/List/List.module.css","components/Settings/Settings.module.css","context.js","components/Header/Header.js","components/Add/Add.js","components/Title/Title.js","views/AddView/AddView.js","components/DelButton/DelButton.js","components/Edit/Edit.js","views/EditView/EditView.js","components/Product/Products.js","views/HomeView/HomeView.js","components/List/List.js","views/ListView/ListView.js","components/Settings/Settings.js","views/SettingsView/SettingsView.js","serviceWorker.js","index.js"],"names":["module","exports","AppContext","React","createContext","Header","className","styles","wrapper","exact","activeClassName","active","to","Add","state","name","count","inputChange","e","setState","target","value","Consumer","context","onSubmit","addProduct","onChange","type","Component","Title","props","title","children","AddView","DelButton","onDelete","onClick","button","Edit","onNameEdit","onCountEdit","id","EditView","list","map","product","key","deleteListItem","editNameHandler","editCountHandler","Products","products","HomeView","List","ListView","limit","Settings","text","change","number","unit","alert","min","max","SettingsView","alertDaysFn","update","limitFn","hostname","window","match","location","publicUrl","process"],"mappings":"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","file":"static/js/main.3074117f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Add_wrapper__c4DQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__1jlrO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Edit_wrapper__3jLK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"DelButton_button__3BKGY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Product_wrapper__VJ8ZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"List_wrapper__3dbx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Settings_alert__3-OT9\"};","import React from 'react'\nconst AppContext = React.createContext()\nexport default AppContext","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './Header.module.css'\n\nconst Header = () => (\n  <nav>\n    <ul className={styles.wrapper}>\n      <li>\n        <NavLink exact\n          activeClassName={styles.active}\n          to=\"/\"\n        >\n          Products\n        </NavLink>\n      </li>\n      <li>\n        <NavLink \n          activeClassName={styles.active}\n          to=\"/edit\"\n        >\n          Edit\n        </NavLink>\n      </li>\n      <li>\n        <NavLink \n          activeClassName={styles.active}\n          to=\"/add\"\n        >\n          Add\n        </NavLink>\n      </li>\n      <li>\n        <NavLink \n          activeClassName={styles.active}\n          to=\"/list\"\n        >\n          List\n        </NavLink>\n      </li>\n      <li>\n        <NavLink \n          activeClassName={styles.active}\n          to=\"/settings\"\n        >\n          Settings\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n)\n\nexport default Header","import React from 'react'\nimport AppContext from '../../context'\nimport styles from './Add.module.css'\n\nclass Add extends React.Component {\n  state = {\n    name: '',\n    count: '',\n  }\n\n  inputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  render() {\n\n    return (\n      <AppContext.Consumer>\n        {(context => (\n          <form className={styles.wrapper} onSubmit={e => context.addProduct(e, this.state)}>\n            <label>Product: </label>\n            <input onChange={this.inputChange} name=\"name\" type=\"text\" />\n            <label>Count: </label>\n            <input onChange={this.inputChange} name=\"count\" type=\"text\" />\n            <input type=\"submit\" value=\"Add new product\" />\n          </form>\n        ))}\n      </AppContext.Consumer>\n    )\n  }\n}\n\n\nexport default Add","import React from 'react'\nimport styles from './Title.module.css'\n\nconst Title = (props) => (\n  <h1 className={styles.title}>{props.children}</h1>\n)\n\nexport default Title","import React from 'react'\nimport Add from '../../components/Add/Add'\nimport Title from '../../components/Title/Title'\n\nconst AddView = () => (\n  <>\n  <Title children={'Add new item to list'} />\n  <Add />\n  </>\n)\n\nexport default AddView\n\n/* \n   Określ ich nazwę, kategorię (opcjonalnie) oraz ilość jaką obecnie posiadasz.\n*/","import React from 'react'\nimport styles from './DelButton.module.css'\n\nconst DelButton = ({onDelete}) => (\n  <button onClick={onDelete} className={styles.button}>Delete</button>\n)\n\nexport default DelButton","import React from 'react'\nimport styles from './Edit.module.css'\n\nimport DelButton from '../DelButton/DelButton'\n\n\nconst Edit = ({name, count, onDelete, onNameEdit, onCountEdit}) => (\n  <li className={styles.wrapper} id={name}>\n    <input onChange={onNameEdit} type=\"text\" value={name} />\n    <input onChange={onCountEdit} type=\"number\" value={count} />\n    <DelButton onDelete={onDelete} />\n  </li>\n)\n\nexport default Edit","import React from 'react'\nimport AppContext from '../../context'\n\nimport Edit from '../../components/Edit/Edit'\nimport Title from '../../components/Title/Title'\n\nconst EditView = () => (\n  <>\n  <Title children={'Edit product'} />\n  <ul>\n  <AppContext.Consumer>\n      {(context) => (\n        <ul>\n        {context.list.map(product => (\n          <Edit key={product.name} onDelete={context.deleteListItem} onNameEdit={context.editNameHandler} onCountEdit={context.editCountHandler} {...product}/>\n        ))}\n        </ul>\n      )}\n    </AppContext.Consumer>\n  </ul>\n  </>\n)\n\nexport default EditView\n\n/*\n  Zmiana nazwy & zmiana kategorii (opcjonalne: jeżeli stworzysz kategorie)\n- Każdy element można łatwo usunąć z listy (wymagane potwierdzenie przed usunięciem).\n- Zmiana ilości produktu przechowywanej w domu (możesz pomyśleć nad jednostkami miary \n  skorelowanymi z kategoriami np. jeśli kateg orią są napoje, to wiadomo że jednostką będą litry, \n  lub jeśli wolisz coś bardziej namacalnego – puszki/butelki).\n*/","import React from 'react'\nimport styles from './Product.module.css'\n\nimport Title from '../../components/Title/Title'\nimport DelButton from '../../components/DelButton/DelButton'\n\nconst Products = ({ products, onDelete }) => (\n  <>\n    <Title children={'List of products'} />\n    <ul>\n      {products.map(product => (\n        <li className={styles.wrapper} id={product.name}>\n          <h3>Product: </h3>\n          <h1>{product.name}</h1>\n          <h3>Quantity: </h3>\n          <h1>{product.count}</h1>\n          <DelButton onDelete={onDelete} />\n        </li>\n      ))}\n    </ul>\n  </>\n)\n\nexport default Products","import React from 'react'\nimport AppContext from '../../context'\n\nimport Products from '../../components/Product/Products'\n\nconst HomeView = () => (\n  <ul>\n    <AppContext.Consumer>\n      {(context) => (\n        <Products products={context.list} onDelete={context.deleteListItem} />\n      )}\n    </AppContext.Consumer>\n  </ul>\n)\n\nexport default HomeView\n\n\n/* \n  Stan może mieć wartość numeryczną lub graficzną w postaci np. paska – użyj wyobraźni\n  Każdy element można łatwo usunąć z listy (wymagane potwierdzenie przed usunięciem).\n*/","import React from 'react'\nimport styles from './List.module.css'\n\nconst List = ({name, count}) => (\n  <li className={styles.wrapper} id={name}>\n    <h4>Product: </h4>\n    <h1>{name}</h1>\n    <h4>Quantity: </h4>\n    <h1>{count}</h1>\n  </li>\n  \n)\n\nexport default List","import React from 'react'\nimport AppContext from '../../context'\n\nimport List from '../../components/List/List'\nimport Title from '../../components/Title/Title'\n\nconst ListView = () => (\n  <>\n    <AppContext.Consumer>\n      {(context) => (\n        <>\n        <Title children={`Shopping list with products less than ${context.limit} pieces.`}/>\n        <ul>\n        {context.list.map(product => (\n          (product.count <= context.limit) ? <List key={product.name} {...product}/> : null\n        ))}\n      </ul>\n      </>\n      )}\n    </AppContext.Consumer>\n  </>\n\n)\nexport default ListView\n\n/*\n  -Lista zakupów generuje się automatycznie jeśli poziom jakiegoś produktu przekroczy określone minimum \n  –wtedy produkt sam wskakuje nam do listy, aby kupić go w sklepie\n*/","import React from 'react'\nimport styles from './Settings.module.css'\n\n\n\nconst Settings = ({text, change, number, unit}) => (\n  <div className={styles.alert}>\n    <h3>{text}</h3>\n    <input onChange={change} type=\"number\" min=\"0\" max=\"100\" value={number} />\n    <h3>{unit}</h3>\n  </div>\n)\n\nexport default Settings\n","import React from 'react'\nimport Settings from '../../components/Settings/Settings'\nimport AppContext from '../../context'\n\nimport Title from '../../components/Title/Title'\n\nconst SettingsView = () => (\n  <AppContext.Consumer>\n    {(context) => (\n      <>\n      <Title children={'Settings'} />\n      <Settings text={'Update alert every'} unit={'days.'} change={context.alertDaysFn} number={context.update} />\n      <Settings text={'Set minimal pieces of products'} change={context.limitFn} number={context.limit} />\n      </>\n    )}\n  </AppContext.Consumer>\n)\n\nexport default SettingsView\n\n/*\n  Ustawienie opcji przypominania o aktualizacji listy (raz na tydzień, raz na 2 dni etc.)  – może to być push\n  notyfikacja w przeglądarce, lub wysłanie do Ciebie SMS– wybór należy do Ciebie. -W tym widoku możesz uruchomić wyobraźnię i dodać rzeczy,\n  z którymi chcesz poeksperymentować np. ustawienie light/dark theme globalnie dla całej apki\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root/Root'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}